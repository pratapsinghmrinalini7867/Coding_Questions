vector<vector<int>> threeSum(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size(); // use n and not nums.size() to avoid an error in C++ where nums.size() - 2 doesn't fit in unsized int
        vector<vector<int>> res;
        
        for(int i = 0; i<n-2; i++)
        {
            if(i > 0 && nums[i] == nums[i-1])    
            {
                continue;
            }
            
            int j = i + 1;
            int k = n - 1;
            
            while(j < k)
            {
                if(nums[i] + nums[j] + nums[k] == 0)
                {
                    res.push_back({nums[i],nums[j],nums[k]});
                    
                    while(j < k && nums[j] == nums[j+1]) // keep in mind j < k in these inner loops
                    {
                        j++;
                    }
                    while(j < k && nums[k] == nums[k-1])
                    {
                        k--;
                    }
                    
                    j++;
                    k--;
                }
                else if(nums[i] + nums[j] + nums[k] > 0)
                {
                    k--;
                }
                else
                {
                    j++;
                }
            }
        }
        
        return res;
    }
